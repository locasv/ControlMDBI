@model ControlMDBI.Areas.Admin.ViewModels.UsuarioPaginadoViewModel

@{
    ViewData["Title"] = "Usuarios";
}

<div class="mt-3" style="font-size: 14px;">
    <h2>Lista de Usuarios</h2>
    <div class="row d-fex flex-column flex-md-row my-4">
        <div class="col-8 col-md-4 col-lg-6 mb-3 mb-md-0">
            <a class="btn btn-success" asp-action="Create">
                <i class="fa-solid fa-plus"></i>&nbsp;Nuevo Usuario
            </a>
        </div>
        <div class="col-12 col-md-8 col-lg-6">
            <form method="get">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="input-group">
                    <input asp-for="@Model.BusquedaNombre" name="busquedaNombre" class="form-control" placeholder="Nombre del Usuario" aria-label="Nombre del Usuario" autocomplete="off" />
                    <button name="botonBusqueda" id="botonBusqueda" type="submit" class="btn btn-outline-primary">
                        <i class="fa-solid fa-magnifying-glass"></i>
                        <span class="d-none d-md-inline-block">Buscar</span>
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fa-solid fa-arrows-rotate"></i>
                    </a>
                </div>
            </form>
        </div>
    </div>

 @if (Model.Usuarios.Count == 0)
    {
        <div class="col-md-12">
            <p>No se encontraron usuarios que coincidan con la búsqueda.</p>
        </div>
    }
    else
    {

<div class="table-responsive">
    <table class="table table-hover text-nowrap">
    <thead>
        <tr>
            <th>
               Empleado
            </th>
            <th>
               NombreUsuario
            </th>
            <th>
               Rol
            </th>
            <th>
               FechaRegistro
            </th>
            <th>
                Estado
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Usuarios) {
        <tr>
            <td>
                @item.Empleado.Nombres  @item.Empleado.Apellidos
            </td>
            <td>
                @item.NombreUsuario
            </td>
            <td>
               @item.Rol
            </td>
            <td>
                @item.FechaRegistro
            </td>
                <td class="text-success">
                    @if (item.Empleado.Activo)
                    {
                        <span class="badge bg-success">Activo</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">Inactivo</span>
                    }
                </td>
                <td>
                    <a class="btn-sm btn-warning" asp-action="Edit" asp-route-id="@item.IdUsuario" data-bs-toggle="tooltip" data-bs-placement="right" title="Editar Usuario"><i class="fa-solid fa-pen"></i></a> 
                    <a class="btn-sm btn-info" asp-action="Details" asp-route-id="@item.IdUsuario" data-bs-toggle="tooltip" data-bs-placement="right" title="Detalles del Usuario"><i class="fa-solid fa-list"></i></a> |
                    <a class="btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.IdUsuario" data-bs-toggle="tooltip" data-bs-placement="right" title="Eliminar Usuario"><i class="fa-solid fa-trash"></i></a>
                </td>
        </tr>
}
    </tbody>
</table>
</div>
}
</div>
<nav class="py-2">
    <ul class="pagination justify-content-center">
        @if (Model.TotalPaginas > 1)
        {
            int inicio = Math.Max(1, Math.Min(Model.TotalPaginas - 4, Model.PaginaActual - 2));
            int fin = Math.Min(Model.TotalPaginas, inicio + 4);

            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Usuarios", new { busquedaNombre = Model.BusquedaNombre, paginaActual = Model.PaginaActual - 5 })">&laquo;</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Usuarios", new { busquedaNombre = Model.BusquedaNombre, paginaActual = Model.PaginaActual - 1 })">&lsaquo;</a>
            </li>
            @for (int pagina = inicio; pagina <= fin; pagina++)
            {
                <li class="page-item @(pagina == Model.PaginaActual ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", "Usuarios", new { busquedaNombre = Model.BusquedaNombre, paginaActual = pagina })">@pagina</a>
                </li>
            }
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Usuarios", new { busquedaNombre = Model.BusquedaNombre, paginaActual = Model.PaginaActual + 1 })">&rsaquo;</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Usuarios", new { busquedaNombre = Model.BusquedaNombre, paginaActual = Model.PaginaActual + 5 })">&raquo;</a>
            </li>
        }
    </ul>
</nav>
